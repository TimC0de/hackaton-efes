version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: efes_api
    ports:
      - "5011:5000"
    restart: unless-stopped
    networks:
      - default
    volumes:
      - "./:/app/"
    env_file:
      - .env

  postgres:
    build:
      context: .docker/pgsql
      target: dev
    restart: always
    container_name: efes_postgres
    environment:
      - POSTGRES_PASSWORD=postgres
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - database-volume:/var/lib/postgresql/data
      - ./.docker/pgsql/sql:/tmp/sql
    ports:
      - "5434:5432"

  mongodb:
    image: mongo:latest
    container_name: efes_mongodb
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: dev
      MONGO_INITDB_ROOT_PASSWORD: dev
    volumes:
      - mongo-data:/data/db
      - ./.docker/mongo:/docker-entrypoint-initdb.d

  qdrant:
    image: qdrant/qdrant:latest  # You can specify a different version if needed
    container_name: efes_qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"  # Expose Qdrant's API port
    volumes:
      - qdrant_storage:/qdrant/storage  # Persist storage to avoid data loss
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6334

  redis:
    image: redis/redis-stack:latest
    container_name: efes_redis
    restart: unless-stopped
    ports:
      - "6380:6379"
      - "8002:8001"
    volumes:
      - "./.docker/redis/redis.conf:/redis-stack.conf"
      - redis-data:/data

networks:
  default:
    driver: bridge

volumes:
  database-volume: {}
  mongo-data:
  qdrant_storage:
  redis-data:
    driver: local
